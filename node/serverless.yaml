service: goals-tracker-project

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  memorySize: 256
  environment:
    EVENTS_TABLE: { Ref: EventsTable }
    SUBSCRIPTIONS_TABLE: { Ref: SubscriptionsTable }
    TEAMS_TABLE: { Ref: TeamsTable }
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:ListStreams
        - dynamodb:DescribeTable
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:BatchWriteItem
        - dynamodb:Query
      Resource:
        - { "Fn::GetAtt": ["SubscriptionsTable", "Arn" ] }
        - { "Fn::GetAtt": ["EventsTable", "Arn" ] }
        - { "Fn::GetAtt": ["TeamsTable", "Arn" ] }
    - Effect: "Allow"
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: "*"

functions:
  dispatcher:
    handler: dispatcher/index.handler
    environment:
      snsTopicArn: !Ref EventTopic
    events:
      - stream:
          type: dynamodb
          arn: { Fn::GetAtt: [EventsTable, StreamArn] }
          batchSize: 1
          startingPosition: LATEST
          enabled: true

  welcomer:
    handler: welcomer/index.handler
    environment:
      snsTopicArn: !Ref EventTopic
    events:
      - stream:
          type: dynamodb
          arn: { Fn::GetAtt: [SubscriptionsTable, StreamArn] }
          batchSize: 1
          startingPosition: LATEST
          enabled: true

  subscriber:
    handler: subscriber/index.handler
    events:
      - http:
          path: subscriptions
          method: post
          cors: true

  teams:
    handler: teams/index.handler
    events:
      - http:
          path: teams
          method: get
          cors: true

  fetch:
    handler: fetch/index.handler
    timeout: 15
    events:
      - schedule:
          rate: rate(45 minutes)
          enabled: true
          input:
            sport: hockey
      - schedule:
          rate: rate(5 minutes)
          enabled: true
          input:
            sport: soccer

  push:
    handler: push/index.handler
    events:
      - sns:
          arn: !Ref EventTopic
          topicName: "${self:provider.stage}-EventTopic"
    environment:
      PUBLIC_KEY: ${file(./variables.yml):PUBLIC_KEY}
      PRIVATE_KEY: ${file(./variables.yml):PRIVATE_KEY}

package:
  exclude:
    - "node_modules/aws-sdk/**"
    - "variables.yml"
    - "node/.eslintrc.json"

resources:
  Resources:
    SubscriptionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${self:provider.stage}-SubscriptionsTable"
        AttributeDefinitions:
          - AttributeName: endpoint
            AttributeType: S
        KeySchema:
          - AttributeName: endpoint
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    EventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${self:provider.stage}-EventsTable"
        AttributeDefinitions:
          - AttributeName: team1
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: team1
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    TeamsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${self:provider.stage}-TeamsTable"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    EventTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "${self:provider.stage}-EventTopic"